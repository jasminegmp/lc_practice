{"version":3,"sources":["FormTextSubmit.js","ClassParentChild.js","ClassChildParent.js","FunctionParentChild.js","OpenBreweryInteraction.js","App.js","index.js"],"names":["FormTextSubmit","props","onSubmit","event","zipcodeCallback","state","input","preventDefault","onChange","setState","target","value","this","type","React","Component","Child","data","dataParentToChild","Parent2","onTrigger","parentCallback","OpenBreweryInteraction","zipcode","result","loading","self","axios","post","then","response","catch","error","console","log","App","handleCallback","className","ReactDOM","render","document","getElementById"],"mappings":"sOAmCeA,E,YAhCX,WAAYC,GAAO,IAAD,8BACd,4CAAMA,KAMVC,SAAW,SAACC,GAER,EAAKF,MAAMG,gBAAgB,EAAKC,MAAMC,OACtCH,EAAMI,kBAVQ,EAclBC,SAAW,SAACL,GACR,EAAKM,SAAS,CAACH,MAAOH,EAAMO,OAAOC,SAbnC,EAAKN,MAAQ,CACTC,MAAO,IAHG,E,sEAoBd,OACI,6BACI,0CACA,0BAAMJ,SAAYU,KAAKV,UACnB,2BAAOW,KAAO,OAAOF,MAASC,KAAKP,MAAMC,MAAOE,SAAYI,KAAKJ,WACjE,2BAAOK,KAAO,SAASF,MAAQ,iB,GA1BtBG,IAAMC,WCkB7BC,GAlBeF,IAAMC,U,YAmBvB,WAAYd,GAAO,IAAD,8BACd,4CAAMA,KACDI,MAAQ,CACTY,KAAM,EAAKhB,MAAMiB,mBAHP,E,sEAOT,IACED,EAAQL,KAAKP,MAAbY,KACP,OACI,6BACKA,O,GAZGH,IAAMC,YClBJD,IAAMC,UCiBbI,IDQTH,E,2MAGFI,UAAY,SAACjB,GACT,EAAKF,MAAMoB,eAAe,mBAC1BlB,EAAMI,kB,wEAIN,OACA,6BACI,0BAAML,SAAYU,KAAKQ,WACnB,2BAAOP,KAAO,SAASF,MAAQ,iB,GAZ3BG,IAAMC,W,iBESXO,E,YA/BX,WAAYrB,GAAO,IAAD,8BACd,4CAAMA,KACDI,MAAQ,CACTkB,QAAS,EAAKtB,MAAMsB,QACpBC,OAAQ,KACRC,SAAS,GALC,E,kFAUd,IAAIC,EAAOd,KACXe,IAAMC,KAAK,0CAA2ChB,KAAKX,MAAMsB,SAChEM,MAAK,SAASC,GAEXJ,EAAKjB,SAAS,CAACe,OAAQM,IACvBJ,EAAKjB,SAAS,CAACgB,SAAS,OAGvBM,OAAM,SAASC,GACZC,QAAQC,IAAIF,Q,+BAMpB,OACI,6BAAMpB,KAAKX,MAAMsB,a,GA5BQT,IAAMC,WC2B5BoB,E,YAtBb,WAAYlC,GAAO,IAAD,8BAChB,4CAAMA,KAORmC,eAAiB,SAACb,GAChB,EAAKd,SAAS,CAACc,aAPf,EAAKlB,MAAQ,CACXkB,QAAS,MAHK,E,sEAahB,OACE,yBAAKc,UAAU,OACb,kBAAC,EAAD,CAAgBjC,gBAAmBQ,KAAKwB,iBACvCxB,KAAKP,MAAMkB,QAAU,kBAAC,EAAD,CAAwBA,QAAWX,KAAKP,MAAMkB,UAAa,U,GAjBvET,IAAMC,WCHxBuB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"js/main.1c7875ab.chunk.js","sourcesContent":["import React from 'react';\n\nclass FormTextSubmit extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            input: ''\n        }\n    }\n\n    onSubmit = (event) => {\n        //alert(\"You submitted: \" + this.state.input);\n        this.props.zipcodeCallback(this.state.input);\n        event.preventDefault();\n\n    }\n\n    onChange = (event) => {\n        this.setState({input: event.target.value})\n    }\n\n\n    render(){\n        return(\n            <div>\n                <h1>Input Form</h1>\n                <form onSubmit = {this.onSubmit}>\n                    <input type = \"text\" value = {this.state.input} onChange = {this.onChange}/>\n                    <input type = \"submit\" value = \"Submit\"/>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default FormTextSubmit;","import React from 'react';\n\nclass Parent extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            data: 'Data from parent'\n        }\n    }\n\n    render(){\n        const {data} = this.state;\n        return(\n            <div>\n                <Child dataParentToChild = {data}/>\n            </div>\n        )\n    }\n}\n\nclass Child extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            data: this.props.dataParentToChild\n        }\n    }\n\n    render(){\n        const {data} = this.state;\n        return(\n            <div>\n                {data}\n            </div>\n        )\n    }\n}\n\nexport default Parent;","import React from 'react';\n\nclass Parent3 extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            data: null\n        }\n    }\n\n    // callback which takes child data I need\n    handleCallback = (childData) =>{\n        this.setState({data: childData})\n    }\n\n    // pass callback as a prop to child\n    render(){\n        const {data} = this.state;\n        return(\n            <div>\n                <Child parentCallback = {this.handleCallback}/>\n                {data}\n            </div>\n        )\n    }\n}\n\nclass Child extends React.Component{\n\n    // call parent callback from child\n    onTrigger = (event) => {\n        this.props.parentCallback(\"Data from child\");\n        event.preventDefault();\n    }\n\n    render(){\n        return(\n        <div>\n            <form onSubmit = {this.onTrigger}>\n                <input type = \"submit\" value = \"Submit\"/>\n            </form>\n        </div>\n        )\n    }\n}\n\nexport default Parent3;","import React from 'react';\n\nfunction Parent2(){\n    const data = 'Data from parent';\n    return(\n        <div>\n            <Child dataParentToChild = {data}/>\n        </div>\n    )\n}\n\nfunction Child ({data}){\n    return(\n        <div>\n            {data}\n        </div>\n    )\n}\n\nexport default Parent2;","import React from 'react';\nimport axios from 'axios';\n\nclass OpenBreweryInteraction extends React.Component{\n\n    constructor(props){\n        super(props);\n        this.state = {\n            zipcode: this.props.zipcode,\n            result: null,\n            loading: true\n        }\n    }\n\n    componentDidUpdate(){\n        let self = this;\n        axios.post('http://127.0.0.1:5000/api/query_zipcode', this.props.zipcode)\n        .then(function(response){\n            //console.log(response);\n            self.setState({result: response});\n            self.setState({loading: false});\n        //Perform action based on response\n            })\n            .catch(function(error){\n                console.log(error);\n        //Perform action based on error\n            });\n    }\n\n    render(){\n        return(\n            <div>{this.props.zipcode}</div>\n        )\n    }\n}\n\nexport default OpenBreweryInteraction;","import React from 'react';\nimport FormTextSubmit from './FormTextSubmit';\nimport Parent from './ClassParentChild'\nimport Parent2 from './FunctionParentChild'\nimport Parent3 from './ClassChildParent'\nimport OpenBreweryInteraction from './OpenBreweryInteraction';\n\nclass App extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      zipcode: null\n    }\n  }\n\n  // callback function from data from text\n  handleCallback = (zipcode) =>{\n    this.setState({zipcode})\n  }\n\n  render(){\n    return (\n      <div className=\"App\">\n        <FormTextSubmit zipcodeCallback = {this.handleCallback}/>\n        {this.state.zipcode ? <OpenBreweryInteraction zipcode = {this.state.zipcode}/> : null}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}